$date
	Mon May 17 15:59:06 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module testbench $end
$var reg 1 ! Clk $end
$var reg 1 " Start $end
$scope module CPU $end
$var wire 1 ! clk_i $end
$var wire 1 # nxt_slc $end
$var wire 1 " rst_i $end
$var wire 1 $ zeo $end
$var wire 5 % wrt_reg [4:0] $end
$var wire 32 & wrt_dat [31:0] $end
$var wire 32 ' read_data [31:0] $end
$var wire 32 ( rd2 [31:0] $end
$var wire 32 ) rd1 [31:0] $end
$var wire 32 * pc_ch0 [31:0] $end
$var wire 32 + pc [31:0] $end
$var wire 32 , nxt_pc1 [31:0] $end
$var wire 32 - nxt_pc0 [31:0] $end
$var wire 32 . jup_ads [31:0] $end
$var wire 32 / instr [31:0] $end
$var wire 32 0 fin_pc [31:0] $end
$var wire 32 1 alu_src [31:0] $end
$var wire 32 2 alu_out [31:0] $end
$var wire 1 3 aluSrc $end
$var wire 3 4 aluOp [2:0] $end
$var wire 4 5 aluCTtoalu [3:0] $end
$var wire 32 6 aft_sgn [31:0] $end
$var wire 32 7 aft_sft [31:0] $end
$var wire 1 8 RegWrite $end
$var wire 1 9 RegDst $end
$var wire 1 : MemWrite $end
$var wire 1 ; MemToReg $end
$var wire 1 < MemRead $end
$var wire 1 = Jump $end
$var wire 1 > Branch $end
$scope module AC $end
$var wire 6 ? funct_i [5:0] $end
$var wire 1 @ op0 $end
$var wire 1 A op1 $end
$var wire 1 B op2 $end
$var wire 1 C op3 $end
$var wire 3 D ALUOp_i [2:0] $end
$var reg 4 E ALUCtrl_o [3:0] $end
$upscope $end
$scope module ALU $end
$var wire 4 F ctrl_i [3:0] $end
$var wire 1 $ zero_o $end
$var wire 32 G src2_i [31:0] $end
$var wire 32 H src1_i [31:0] $end
$var reg 32 I result_o [31:0] $end
$upscope $end
$scope module Adder1 $end
$var wire 32 J src1_i [31:0] $end
$var wire 32 K src2_i [31:0] $end
$var reg 32 L sum_o [31:0] $end
$upscope $end
$scope module Adder2 $end
$var wire 32 M src1_i [31:0] $end
$var wire 32 N src2_i [31:0] $end
$var reg 32 O sum_o [31:0] $end
$upscope $end
$scope module Data_Memory $end
$var wire 32 P addr_i [31:0] $end
$var wire 1 ! clk_i $end
$var wire 32 Q data_i [31:0] $end
$var wire 1 : MemWrite_i $end
$var wire 1 < MemRead_i $end
$var reg 32 R data_o [31:0] $end
$var integer 32 S i [31:0] $end
$upscope $end
$scope module Decoder $end
$var wire 1 T addi $end
$var wire 1 U bieq $end
$var wire 6 V instr_op_i [5:0] $end
$var wire 1 W jpal $end
$var wire 1 X jprt $end
$var wire 1 Y jump $end
$var wire 1 Z lowd $end
$var wire 1 [ rfmt $end
$var wire 1 \ slti $end
$var wire 1 ] stwd $end
$var reg 1 3 ALUSrc_o $end
$var reg 3 ^ ALU_op_o [2:0] $end
$var reg 1 > Branch_o $end
$var reg 1 = Jump_o $end
$var reg 1 < MemRead_o $end
$var reg 1 ; MemToReg_o $end
$var reg 1 : MemWrite_o $end
$var reg 1 9 RegDst_o $end
$var reg 1 8 RegWrite_o $end
$upscope $end
$scope module IM $end
$var wire 32 _ pc_addr_i [31:0] $end
$var reg 32 ` instr_o [31:0] $end
$var integer 32 a i [31:0] $end
$upscope $end
$scope module JumpAdd $end
$var wire 26 b data_i [25:0] $end
$var wire 4 c prv_i [3:0] $end
$var wire 32 d data_o [31:0] $end
$upscope $end
$scope module Mux_ALUSrc $end
$var wire 1 3 select_i $end
$var wire 32 e data1_i [31:0] $end
$var wire 32 f data0_i [31:0] $end
$var reg 32 g data_o [31:0] $end
$upscope $end
$scope module Mux_PC_Source_1 $end
$var wire 32 h data0_i [31:0] $end
$var wire 32 i data1_i [31:0] $end
$var wire 1 # select_i $end
$var reg 32 j data_o [31:0] $end
$upscope $end
$scope module Mux_PC_Source_2 $end
$var wire 32 k data0_i [31:0] $end
$var wire 32 l data1_i [31:0] $end
$var wire 1 = select_i $end
$var reg 32 m data_o [31:0] $end
$upscope $end
$scope module Mux_Write_Dat $end
$var wire 32 n data0_i [31:0] $end
$var wire 32 o data1_i [31:0] $end
$var wire 1 ; select_i $end
$var reg 32 p data_o [31:0] $end
$upscope $end
$scope module Mux_Write_Reg $end
$var wire 5 q data0_i [4:0] $end
$var wire 5 r data1_i [4:0] $end
$var wire 1 9 select_i $end
$var reg 5 s data_o [4:0] $end
$upscope $end
$scope module PC $end
$var wire 1 ! clk_i $end
$var wire 32 t pc_in_i [31:0] $end
$var wire 1 " rst_i $end
$var reg 32 u pc_out_o [31:0] $end
$upscope $end
$scope module Registers $end
$var wire 5 v RDaddr_i [4:0] $end
$var wire 32 w RDdata_i [31:0] $end
$var wire 5 x RSaddr_i [4:0] $end
$var wire 32 y RSdata_o [31:0] $end
$var wire 5 z RTaddr_i [4:0] $end
$var wire 32 { RTdata_o [31:0] $end
$var wire 1 8 RegWrite_i $end
$var wire 1 ! clk_i $end
$var wire 1 " rst_i $end
$upscope $end
$scope module SE $end
$var wire 16 | data_i [15:0] $end
$var reg 32 } data_o [31:0] $end
$upscope $end
$scope module Shifter $end
$var wire 32 ~ data_i [31:0] $end
$var wire 32 !" data_o [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx00 !"
bx ~
bx }
bx |
bx {
bx z
bx y
bx x
bx w
bx v
bx u
bx t
bx s
bx r
bx q
bx p
bx o
bx n
bx m
bx00 l
bx k
bx j
bx i
bx h
bx g
bx f
bx e
bx00 d
bx c
bx b
b100000 a
bx `
bx _
bx ^
x]
x\
x[
xZ
xY
xX
xW
bx V
xU
xT
b10000000 S
bx R
bx Q
bx P
bx O
bx00 N
bx M
bx L
bx K
b100 J
bx I
bx H
bx G
b10 F
b10 E
bx D
0C
xB
xA
x@
bx ?
x>
x=
x<
x;
x:
x9
x8
bx00 7
bx 6
b10 5
bx 4
x3
bx 2
bx 1
bx 0
bx /
bx00 .
bx -
bx ,
bx +
bx *
bx )
bx (
bx '
bx &
bx %
x$
x#
0"
0!
$end
#2000
b1 &
b1 p
b1 w
0$
b1 2
b1 I
b1 P
b1 n
b100 0
b100 m
b100 t
0B
1@
0#
13
18
09
0>
0=
0:
0<
0;
b110 4
b110 D
b110 ^
b1 1
b1 G
b1 g
b1 %
b1 s
b1 v
b100 *
b100 j
b100 k
1T
0[
0X
0U
b1000 ,
b1000 O
b1000 i
1A
0\
0Y
b100 7
b100 N
b100 !"
0Z
0]
0W
b1 6
b1 e
b1 }
b1 ~
b0 c
b1 |
b1 ?
b1000 V
b0 (
b0 Q
b0 f
b0 {
b1 z
b0 )
b0 H
b0 y
b0 x
b0 r
b1 q
b1000000000000000100 .
b1000000000000000100 d
b1000000000000000100 l
b10000000000000001 b
b100 -
b100 L
b100 M
b100 h
b100000000000010000000000000001 /
b100000000000010000000000000001 `
b0 +
b0 K
b0 _
b0 u
1!
#4000
0!
#5000
b1 (
b1 Q
b1 f
b1 {
1"
#6000
b10 &
b10 p
b10 w
b10 2
b10 I
b10 P
b10 n
b1000 0
b1000 m
b1000 t
b10 1
b10 G
b10 g
b10 %
b10 s
b10 v
b1000 *
b1000 j
b1000 k
0@
1B
b1000 7
b1000 N
b1000 !"
b10 6
b10 e
b10 }
b10 ~
b10000 ,
b10000 O
b10000 i
b10 |
b10 ?
b0 (
b0 Q
b0 f
b0 {
b10 z
b10 q
b10000000000000001000 .
b10000000000000001000 d
b10000000000000001000 l
b100000000000000010 b
b1000 -
b1000 L
b1000 M
b1000 h
b100000000000100000000000000010 /
b100000000000100000000000000010 `
b100 +
b100 K
b100 _
b100 u
1!
#8000
0!
#10000
b11 &
b11 p
b11 w
b11 2
b11 I
b11 P
b11 n
b1100 0
b1100 m
b1100 t
b11 1
b11 G
b11 g
b11 %
b11 s
b11 v
b1100 *
b1100 j
b1100 k
1@
b1100 7
b1100 N
b1100 !"
b11 6
b11 e
b11 }
b11 ~
b11000 ,
b11000 O
b11000 i
b11 |
b11 ?
b11 z
b11 q
b11000000000000001100 .
b11000000000000001100 d
b11000000000000001100 l
b110000000000000011 b
b1100 -
b1100 L
b1100 M
b1100 h
b100000000000110000000000000011 /
b100000000000110000000000000011 `
b1000 +
b1000 K
b1000 _
b1000 u
b0 (
b0 Q
b0 f
b0 {
1!
#12000
0!
#14000
b100 &
b100 p
b100 w
b100 2
b100 I
b100 P
b100 n
b10000 0
b10000 m
b10000 t
b100 1
b100 G
b100 g
b100 %
b100 s
b100 v
b10000 *
b10000 j
b10000 k
0@
0A
0B
b10000 7
b10000 N
b10000 !"
b100 6
b100 e
b100 }
b100 ~
b100000 ,
b100000 O
b100000 i
b100 |
b100 ?
b100 z
b100 q
b100000000000000010000 .
b100000000000000010000 d
b100000000000000010000 l
b1000000000000000100 b
b10000 -
b10000 L
b10000 M
b10000 h
b100000000001000000000000000100 /
b100000000001000000000000000100 `
b1100 +
b1100 K
b1100 _
b1100 u
b0 (
b0 Q
b0 f
b0 {
1!
#16000
0!
#18000
b101 &
b101 p
b101 w
b101 2
b101 I
b101 P
b101 n
b10100 0
b10100 m
b10100 t
b101 1
b101 G
b101 g
b101 %
b101 s
b101 v
b10100 *
b10100 j
b10100 k
1@
b10100 7
b10100 N
b10100 !"
b101 6
b101 e
b101 }
b101 ~
b101000 ,
b101000 O
b101000 i
b101 |
b101 ?
b101 z
b101 q
b101000000000000010100 .
b101000000000000010100 d
b101000000000000010100 l
b1010000000000000101 b
b10100 -
b10100 L
b10100 M
b10100 h
b100000000001010000000000000101 /
b100000000001010000000000000101 `
b10000 +
b10000 K
b10000 _
b10000 u
b0 (
b0 Q
b0 f
b0 {
1!
#20000
0!
#22000
b0 &
b0 p
b0 w
1$
b0 2
b0 I
b0 P
b0 n
b10 5
b10 E
b10 F
b100000 0
b100000 m
b100000 t
0@
1=
03
08
b0 1
b0 G
b0 g
b0 4
b0 D
b0 ^
b0 %
b0 s
b0 v
b11000 *
b11000 j
b11000 k
1Y
0T
1A
0\
b100000 7
b100000 N
b100000 !"
b1000 6
b1000 e
b1000 }
b1000 ~
b111000 ,
b111000 O
b111000 i
b1000 |
b1000 ?
b10 V
b0 z
b0 q
b100000 .
b100000 d
b100000 l
b1000 b
b11000 -
b11000 L
b11000 M
b11000 h
b1000000000000000000000001000 /
b1000000000000000000000001000 `
b10100 +
b10100 K
b10100 _
b10100 u
b0 (
b0 Q
b0 f
b0 {
1!
#24000
0!
#26000
b0 &
b0 p
b0 w
1$
b0 2
b0 I
b0 P
b0 n
1:
13
0=
b0 1
b0 G
b0 g
b1 %
b1 s
b1 v
b100100 0
b100100 m
b100100 t
b100100 *
b100100 j
b100100 k
1]
0Y
b0 7
b0 N
b0 !"
0W
b0 6
b0 e
b0 }
b0 ~
b100100 ,
b100100 O
b100100 i
b0 |
b0 ?
b101011 V
b1 (
b1 Q
b1 f
b1 {
b1 z
b1 q
b1000000000000000000 .
b1000000000000000000 d
b1000000000000000000 l
b10000000000000000 b
b100100 -
b100100 L
b100100 M
b100100 h
b10101100000000010000000000000000 /
b10101100000000010000000000000000 `
b100000 +
b100000 K
b100000 _
b100000 u
1!
#28000
0!
#30000
b100 &
b100 p
b100 w
0$
b100 2
b100 I
b100 P
b100 n
b101000 0
b101000 m
b101000 t
b100 1
b100 G
b100 g
b10 %
b10 s
b10 v
b101000 *
b101000 j
b101000 k
b10000 7
b10000 N
b10000 !"
b100 6
b100 e
b100 }
b100 ~
b111000 ,
b111000 O
b111000 i
b100 |
b100 ?
b10 (
b10 Q
b10 f
b10 {
b10 z
b10 q
b10000000000000010000 .
b10000000000000010000 d
b10000000000000010000 l
b100000000000000100 b
b101000 -
b101000 L
b101000 M
b101000 h
b10101100000000100000000000000100 /
b10101100000000100000000000000100 `
b100100 +
b100100 K
b100100 _
b100100 u
1!
#32000
0!
#34000
b1 &
b1 p
b1 w
1$
b0 2
b0 I
b0 P
b0 n
b101100 0
b101100 m
b101100 t
b1 '
b1 R
b1 o
1<
1;
18
0:
13
b0 1
b0 G
b0 g
b110 %
b110 s
b110 v
b101100 *
b101100 j
b101100 k
1Z
0]
b0 7
b0 N
b0 !"
b0 6
b0 e
b0 }
b0 ~
b101100 ,
b101100 O
b101100 i
b0 |
b0 ?
b100011 V
b0 (
b0 Q
b0 f
b0 {
b110 z
b110 q
b110000000000000000000 .
b110000000000000000000 d
b110000000000000000000 l
b1100000000000000000 b
b101100 -
b101100 L
b101100 M
b101100 h
b10001100000001100000000000000000 /
b10001100000001100000000000000000 `
b101000 +
b101000 K
b101000 _
b101000 u
1!
#36000
0!
#38000
b10 &
b10 p
b10 w
b110000 0
b110000 m
b110000 t
b10 '
b10 R
b10 o
0$
b100 2
b100 I
b100 P
b100 n
b111 %
b111 s
b111 v
b110000 *
b110000 j
b110000 k
b110000 ,
b110000 O
b110000 i
b111 z
b100 )
b100 H
b100 y
b100 x
b111 q
b10000111000000000000000000 .
b10000111000000000000000000 d
b10000111000000000000000000 l
b100001110000000000000000 b
b110000 -
b110000 L
b110000 M
b110000 h
b10001100100001110000000000000000 /
b10001100100001110000000000000000 `
b101100 +
b101100 K
b101100 _
b101100 u
b0 (
b0 Q
b0 f
b0 {
1!
#40000
0!
#42000
b100 &
b100 p
b100 w
b110100 0
b110100 m
b110100 t
19
0<
0;
03
18
b11 1
b11 G
b11 g
b10 4
b10 D
b10 ^
b100 2
b100 I
b100 P
b100 n
b1000 %
b1000 s
b1000 v
b110100 *
b110100 j
b110100 k
1[
1X
b10000000010000000 7
b10000000010000000 N
b10000000010000000 !"
0Z
b100000000100000 6
b100000000100000 e
b100000000100000 }
b100000000100000 ~
b10000000010110100 ,
b10000000010110100 O
b10000000010110100 i
b100000000100000 |
b100000 ?
b0 V
b11 z
b1 )
b1 H
b1 y
b1 x
b1000 r
b11 q
b100011010000000010000000 .
b100011010000000010000000 d
b100011010000000010000000 l
b1000110100000000100000 b
b110100 -
b110100 L
b110100 M
b110100 h
b1000110100000000100000 /
b1000110100000000100000 `
b110000 +
b110000 K
b110000 _
b110000 u
b11 (
b11 Q
b11 f
b11 {
1!
#44000
0!
#46000
0$
b10 &
b10 p
b10 w
b111000 0
b111000 m
b111000 t
b10 '
b10 R
b10 o
1<
1;
13
b10 5
b10 E
b10 F
18
09
b0 4
b0 D
b0 ^
b100 1
b100 G
b100 g
b100 2
b100 I
b100 P
b100 n
b1001 %
b1001 s
b1001 v
b111000 *
b111000 j
b111000 k
1Z
1A
0[
0W
0X
b10000 7
b10000 N
b10000 !"
b100 6
b100 e
b100 }
b100 ~
b1001000 ,
b1001000 O
b1001000 i
b100 |
b100 ?
b100011 V
b0 (
b0 Q
b0 f
b0 {
b1001 z
b0 )
b0 H
b0 y
b0 x
b0 r
b1001 q
b1001000000000000010000 .
b1001000000000000010000 d
b1001000000000000010000 l
b10010000000000000100 b
b111000 -
b111000 L
b111000 M
b111000 h
b10001100000010010000000000000100 /
b10001100000010010000000000000100 `
b110100 +
b110100 K
b110100 _
b110100 u
1!
#48000
0!
#50000
b0 &
b0 p
b0 w
1$
b0 2
b0 I
b0 P
b0 n
b111100 0
b111100 m
b111100 t
19
0<
0;
03
18
b0 1
b0 G
b0 g
b10 4
b10 D
b10 ^
b0 %
b0 s
b0 v
b111100 *
b111100 j
b111100 k
1[
1X
b0 7
b0 N
b0 !"
0Z
b0 6
b0 e
b0 }
b0 ~
b111100 ,
b111100 O
b111100 i
b0 |
b0 ?
b0 V
b0 z
b0 q
b0 .
b0 d
b0 l
b0 b
b111100 -
b111100 L
b111100 M
b111100 h
b0 /
b0 `
b111000 +
b111000 K
b111000 _
b111000 u
b0 (
b0 Q
b0 f
b0 {
1!
#52000
0!
#54000
b1000000 0
b1000000 m
b1000000 t
b1000000 *
b1000000 j
b1000000 k
b1000000 ,
b1000000 O
b1000000 i
b1000000 -
b1000000 L
b1000000 M
b1000000 h
b111100 +
b111100 K
b111100 _
b111100 u
1!
#56000
0!
#58000
b1000100 0
b1000100 m
b1000100 t
b1000100 *
b1000100 j
b1000100 k
b1000100 ,
b1000100 O
b1000100 i
b1000100 -
b1000100 L
b1000100 M
b1000100 h
b1000000 +
b1000000 K
b1000000 _
b1000000 u
1!
#60000
0!
#62000
b1001000 0
b1001000 m
b1001000 t
b1001000 *
b1001000 j
b1001000 k
b1001000 ,
b1001000 O
b1001000 i
b1001000 -
b1001000 L
b1001000 M
b1001000 h
b1000100 +
b1000100 K
b1000100 _
b1000100 u
1!
#64000
0!
#66000
b1001100 0
b1001100 m
b1001100 t
b1001100 *
b1001100 j
b1001100 k
b1001100 ,
b1001100 O
b1001100 i
b1001100 -
b1001100 L
b1001100 M
b1001100 h
b1001000 +
b1001000 K
b1001000 _
b1001000 u
1!
#68000
0!
#70000
b1010000 0
b1010000 m
b1010000 t
b1010000 *
b1010000 j
b1010000 k
b1010000 ,
b1010000 O
b1010000 i
b1010000 -
b1010000 L
b1010000 M
b1010000 h
b1001100 +
b1001100 K
b1001100 _
b1001100 u
1!
#72000
0!
#74000
b1010100 0
b1010100 m
b1010100 t
b1010100 *
b1010100 j
b1010100 k
b1010100 ,
b1010100 O
b1010100 i
b1010100 -
b1010100 L
b1010100 M
b1010100 h
b1010000 +
b1010000 K
b1010000 _
b1010000 u
1!
#76000
0!
#78000
b1011000 0
b1011000 m
b1011000 t
b1011000 *
b1011000 j
b1011000 k
b1011000 ,
b1011000 O
b1011000 i
b1011000 -
b1011000 L
b1011000 M
b1011000 h
b1010100 +
b1010100 K
b1010100 _
b1010100 u
1!
#80000
